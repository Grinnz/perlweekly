<?xml version="1.0" encoding="UTF-8"?>

<rdf:RDF
 xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
 xmlns="http://purl.org/rss/1.0/"
 xmlns:content="http://purl.org/rss/1.0/modules/content/"
 xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
 xmlns:dc="http://purl.org/dc/elements/1.1/"
 xmlns:syn="http://purl.org/rss/1.0/modules/syndication/"
 xmlns:admin="http://webns.net/mvcb/"
>

<channel rdf:about="http://perlweekly.com/">
<title>Perl Weekly newsletter</title>
<link>http://perlweekly.com/</link>
<description>A free, once a week e-mail round-up of hand-picked news and articles about Perl.</description>
<dc:language>en-us</dc:language>
<dc:rights>Copyright 2011-2011, Gabor Szabo</dc:rights>
<dc:publisher>szabgab@gmail.com</dc:publisher>
<syn:updateBase>2011-08-01T00:00+00:00</syn:updateBase>
<syn:updateFrequency>1</syn:updateFrequency>
<syn:updatePeriod>weekly</syn:updatePeriod>
<items>
 <rdf:Seq>
  <rdf:li rdf:resource="http://www.nntp.perl.org/group/perl.perl5.porters/2011/09/msg177618.html" />
  <rdf:li rdf:resource="http://blogs.perl.org/users/leo_lapworth/2011/09/learnperlorg-relanched---and-includes-perlfaq.html" />
  <rdf:li rdf:resource="http://blog.robin.smidsrod.no/2011/09/30/implementing-www-lastfm-part-1" />
  <rdf:li rdf:resource="http://blogs.perl.org/users/cpan_testers/2011/09/cpan-testers-server-update---29092011.html" />
  <rdf:li rdf:resource="http://www.modernperlbooks.com/mt/2011/09/how-to-learn-perl.html" />
  <rdf:li rdf:resource="http://www.modernperlbooks.com/mt/2011/09/always-tdd-except-when-you-shouldnt.html" />
  <rdf:li rdf:resource="http://blogs.perl.org/users/neilb/2011/09/cpan-modules-for-spelling-out-numbers-in-english.html" />
  <rdf:li rdf:resource="http://bulknews.typepad.com/blog/2011/09/on-perl-and-backward-compatibilities.html" />
  <rdf:li rdf:resource="http://blogs.perl.org/users/mauke/2011/09/exit-statuses-and-how-works.html" />
 </rdf:Seq>
</items>
</channel>
<item rdf:about="http://www.nntp.perl.org/group/perl.perl5.porters/2011/09/msg177618.html">
<title>Perl 5.14.2 is now available</title>
<link>http://www.nntp.perl.org/group/perl.perl5.porters/2011/09/msg177618.html</link>
<description>The third stable release of Perl 5.14 series.</description>
</item>
<item rdf:about="http://blogs.perl.org/users/leo_lapworth/2011/09/learnperlorg-relanched---and-includes-perlfaq.html">
<title>learn.perl.org relaunched - and includes PerlFAQ</title>
<link>http://blogs.perl.org/users/leo_lapworth/2011/09/learnperlorg-relanched---and-includes-perlfaq.html</link>
<description>Leo Lapworth (Ranguard) has worked quite a lot making improvements to learn.perl.org. Finally it is online.</description>
</item>
<item rdf:about="http://blog.robin.smidsrod.no/2011/09/30/implementing-www-lastfm-part-1">
<title>Implementing WWW::LastFM, a client library to the Last.FM API, with XML::Rabbit</title>
<link>http://blog.robin.smidsrod.no/2011/09/30/implementing-www-lastfm-part-1</link>
<description>Robin Smidsr&#xF8;d took the challenge to explain what is XML::Rabbit? He shows in small steps how he built the module starting by getting the API keys, setting up the environment, creating the Moose-based classes and implementing the API calls one by one.</description>
</item>
<item rdf:about="http://blogs.perl.org/users/cpan_testers/2011/09/cpan-testers-server-update---29092011.html">
<title>CPAN Testers Server Update</title>
<link>http://blogs.perl.org/users/cpan_testers/2011/09/cpan-testers-server-update---29092011.html</link>
<description>Barbie (real name) has been writing about the hardware failure the CPAN Testers server encountered and how he was dealing with it. For several weeks it was mostly hard work but now finally we start to see real results showing up along with some analysis on how he handled some performance issues.</description>
</item>
<item rdf:about="http://www.modernperlbooks.com/mt/2011/09/how-to-learn-perl.html">
<title>How to Learn Perl</title>
<link>http://www.modernperlbooks.com/mt/2011/09/how-to-learn-perl.html</link>
<description>chromatic provides a simple narrative on how you can start learning Perl, which books, web sites and other resources can help.</description>
</item>
<item rdf:about="http://www.modernperlbooks.com/mt/2011/09/always-tdd-except-when-you-shouldnt.html">
<title>Always TDD, Except When You Shouldn&#x27;t</title>
<link>http://www.modernperlbooks.com/mt/2011/09/always-tdd-except-when-you-shouldnt.html</link>
<description>chromatic points to a very controversial article by </description>
</item>
<item rdf:about="http://blogs.perl.org/users/neilb/2011/09/cpan-modules-for-spelling-out-numbers-in-english.html">
<title>CPAN modules for spelling out numbers in English</title>
<link>http://blogs.perl.org/users/neilb/2011/09/cpan-modules-for-spelling-out-numbers-in-english.html</link>
<description>How do you say 117? Is that &#x27;one hundred and seventeen&#x27; or is that &#x27;one hundred seventeen&#x27;? This is another great in-depth comparison article by Neil Bowers. This time he checked 4 modules on CPAN for the time when you&#x27;d like to use letters instead of numbers. It is limited to English. I wonder if there are similar modules in other languages as well?</description>
</item>
<item rdf:about="http://bulknews.typepad.com/blog/2011/09/on-perl-and-backward-compatibilities.html">
<title>On Perl and backward compatibilities</title>
<link>http://bulknews.typepad.com/blog/2011/09/on-perl-and-backward-compatibilities.html</link>
<description>There is a tension between wanting to keep backward compatibility and developing Perl or a CPAN module fast. Tatsuhiko Miyagawa gives a good example pointing out the issue in the dependency chain and then points to &#x27;carton&#x27;, his solution for the problem.</description>
</item>
<item rdf:about="http://blogs.perl.org/users/mauke/2011/09/exit-statuses-and-how-works.html">
<title>Exit statuses and how $? works</title>
<link>http://blogs.perl.org/users/mauke/2011/09/exit-statuses-and-how-works.html</link>
<description>Killing zombies and signaling orphans to exit the system? It is quite confusing for most of us who are not Unix system administrators by birth. Mauke helps clearing the confusion explaining how processes in Linux terminate and how, you as a Perl programmer can deal with that.</description>
</item>
</rdf:RDF>