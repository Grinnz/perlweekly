


## DateTime::Moonpig, a saner interface to DateTime 
http://blog.plover.com/prog/perl/DateTime-Moonpig.html
2014-01-10

Some epic projects also bring fortuitous collateral goodies.
The space race gave us disposable diapers, Moonpig, a more rational 
interface to the powerful DateTime module. Mark J Dominus makes the 
case for it.

## Introduction to MongoDB
http://perltv.org/v/introduction-to-mongodb
2014-01-10

Brendan W. McAdams gives us an introduction to MongoDB, and how to use it via 
its Perl drivers.

## Solve almost any datetime need with Time::Piece
http://perltricks.com/article/59/2014/1/10/Solve-almost-any-datetime-need-with-Time-Piece
2014-01-10

DateTime isn't the only kid on the block when it comes to temporal needs.
There is also the friendlier Time::Piece which, David Farrell argues, might
fit most of your needs.

## Pinto Can Use Stratopanâ€™s Mirror While CPAN Master Is Down
http://blog.stratopan.com/2014/01/attention-pinto-users-use-this-workaround-while-pause-is-down/
2014-01-10

If there's a thing the Perl ecosystem is good for, it's to reroute around the
damage. HEre, Jeffrey Thalhammer shows us how to tweak Pinto to use
cpan.stratopan.com instead of cpan.perl.org until the situation returns to
normal.

## Secrets of cpanm cpanfile Support
http://www.modernperlbooks.com/mt/2014/01/secrets-of-cpanm-cpanfile-support.html
2014-10-08

cpanfile is a straight-forward way to declare your project's dependencies.
Did you know cpanminus supports it? If not, chromatic has some good news for
you.

##  Houston Perl Mongers - Library Data Migration with Perl 
https://www.youtube.com/watch?v=srdEXEwdupY
2014-01-09

The Houston Perl Mongers meeting of this month.

## Why I Didn't Submit A Patch
http://blogs.perl.org/users/ovid/2014/01/why-i-didnt-submit-a-patch.html
2014-01-08

It's a harsh reality, but it stands to reason: for your project to get 
contributions, you have to reduce the hoops the wannabe contributors has to
jump through  to as close as zero as possible. That can mean, amongst other
things and for better or worse, having your project using the VCS and/or
hosting site that is the de facto standard in your community. Ovid explains
how, in his case, that made the difference between investing time into pushing
a patch, or not.

## The easy way to build stand-alone Perl apps
http://perltricks.com/article/58/2014/1/5/The-easy-way-to-build-stand-alone-Perl-apps
2014-01-05

So you have this Perl program that you want to use as a standalone
application. No libraries to install, just a vanilla perl on the target
machine, your file, and that's it. David Farrell shows you how that's possible
to do using App::FatPacker.

## Perl and Me, Part 5: Speaking with the speech of coders
http://blogs.perl.org/users/buddy_burden/2014/01/perl-and-me-part-5-speaking-with-the-speech-of-coders.html
2014-01-05

Just like English, Perl borrows liberally from other languages, is full of
what seems to be redundance, and have quite its fair share of quirks. 
Coincidence? No, not really. Buddy Burden dives deep into Perl's linguistic heritage.

## Strawberry Perl 5.18.2.1 released
http://blogs.perl.org/users/kmx/2014/01/strawberry-perl-51821-released.html
2014-01-09

No strawberry shall be left behind. Following suit with the release
of Perl 5.18.2, kmx announces the new Strawberry Perl.

## Multiple Hard Drive Failure 
http://log.perl.org/2014/01/multiple-hard-drive-faliure.html
2014-01-08

Executive summary: oh *beep*. The Perl NOC experienced the failure of several
hard drives and, in consequences, PAUSE is down. Fortunately, the brave souls
at the NOC are scrambling to get things back to normal. We wish them godspeed.


## making my daemon share more memory
http://rjbs.manxome.org/rubric/entry/2031
2014-01-10

Sharing is caring (about your memory footprint and the ones of your forked
children). Ricardo Signes cares, and here shares his tricks to ensure the maximal amount of memory is
shared between a daemon and its children.

## B::C[C] and rperl
http://blogs.perl.org/users/rurban/2014/01/bcc-and-rperl.html
2014-01-07

Reini Urban discusses the deep, gory parts of the B::C perl compiler
in conjuncture with the new 'rperl' project.

